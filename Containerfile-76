ARG EE_BASE_IMAGE=quay.io/ansible/ansible-runner:latest
ARG EE_BUILDER_IMAGE=quay.io/ansible/ansible-builder:latest

FROM $EE_BASE_IMAGE as galaxy
ARG ANSIBLE_GALAXY_CLI_COLLECTION_OPTS=
USER root

ADD _build /build
WORKDIR /build

RUN ansible-galaxy role install -r requirements.yml --roles-path /usr/share/ansible/roles
RUN ansible-galaxy collection install $ANSIBLE_GALAXY_CLI_COLLECTION_OPTS -r requirements.yml --collections-path /usr/share/ansible/collections

FROM $EE_BUILDER_IMAGE as builder

COPY --from=galaxy /usr/share/ansible /usr/share/ansible

ADD _build/bindep.txt bindep.txt
RUN ansible-builder introspect --sanitize --user-bindep=bindep.txt --write-bindep=/tmp/src/bindep.txt --write-pip=/tmp/src/requirements.txt
RUN assemble

FROM $EE_BASE_IMAGE
USER root

RUN yum install -y sudo
#RUN yum install -y java-1.8.0-openjdk-devel
COPY _build/java/* /usr/share/java/
COPY --from=galaxy /usr/share/ansible /usr/share/ansible

COPY --from=builder /output/ /output/
RUN /output/install-from-bindep && rm -rf /output/wheels
RUN ls -al /usr/bin/ |grep python
RUN alternatives --set python /usr/bin/python3
COPY --from=quay.io/project-receptor/receptor:1.0.0a2 /usr/bin/receptor /usr/bin/receptor
RUN mkdir -p /var/run/receptor
ADD run.sh /run.sh
CMD /run.sh
#USER 1000
RUN git lfs install

RUN yum install -y zip
RUN yum install -y unzip
RUN yum install -y openssh
RUN yum install -y openssl
RUN yum install -y mariadb-java-client
#RUN yum install -y mariadb
#RUN yum install -y mysql

RUN ls -al /usr/bin/ |grep python

RUN yum install -y java-1.8.0-openjdk-devel mysql
ENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk

#ADD _build/python2-httplib2-0.18.1-3.el7.noarch.rpm python2-httplib2-0.18.1-3.el7.noarch.rpm
#RUN yum localinstall -y python2-httplib2-0.18.1-3.el7.noarch.rpm
RUN yum install -y python2
RUN alternatives --set python /usr/bin/python2
RUN yum install -y python2-pip
RUN python -m pip install httplib2
RUN python -m pip install PyMySQL
